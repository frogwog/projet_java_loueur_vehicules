import java.io.FileOutputStream;
import java.util.Date;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


public class FirstPdf {
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font blackFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);


    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    public static void addMetaData(Document document) {
        document.addTitle("Devis Location");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Edouard Soares");
        document.addCreator("CarAuto");
    }

    public static void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("Devis de location de véhicule", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph("Devis effectué le" + " : " + new Date() + " Par CarAuto", smallBold));
        addEmptyLine(preface, 3);
        document.add(preface);

    }

    public static void addContent(Document document, Exemplaire exemplaire, Emprunteur emprunteur, java.util.Date date_debut, java.util.Date date_fin) throws DocumentException {

        Paragraph contenu = new Paragraph();

        long diff = (date_fin.getTime() - date_debut.getTime());

        long prix =(diff / (1000*60*60*24)) * 20;

        if (exemplaire.getVehiculeReference().type == "Auto") {

            addEmptyLine(contenu, 1);
            contenu.add(new Paragraph("Vehicule loué : " + exemplaire.getVehiculeReference().getMarque() + "  " + exemplaire.getVehiculeReference().getModele(), subFont));

        }

        else {
            addEmptyLine(contenu, 1);
            contenu.add(new Paragraph("Vehicule loué : " + exemplaire.getVehiculeReference().getMarque() + "  " + exemplaire.getVehiculeReference().getCylindree(), subFont));
        }


        addEmptyLine(contenu, 1);
        contenu.add(new Paragraph("Immatriculé : " + exemplaire.getImmat(), blackFont));

        addEmptyLine(contenu, 1);
        contenu.add(new Paragraph("Kilométrage : " + exemplaire.getKilometres() + "km", blackFont));

        addEmptyLine(contenu, 1);
        contenu.add(new Paragraph("Loueur : " + emprunteur.getNom() + " " + emprunteur.getPrenom() + "  " + emprunteur.getAdresse(), blackFont));

        addEmptyLine(contenu, 1);
        contenu.add(new Paragraph("Date de début de la location : " + date_debut , blackFont));

        addEmptyLine(contenu, 1);
        contenu.add(new Paragraph("Date de fin prévue : " + date_fin , blackFont));

        addEmptyLine(contenu, 1);
        contenu.add(new Paragraph("Prix estimé : " + prix +"€" , blackFont));

        document.add(contenu);

    }


    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}